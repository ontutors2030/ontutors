@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model IEnumerable<OPTFS.Models.Chat>
@{
    ViewData["Title"] = "Index";
    var myUser = await UserManager.GetUserAsync(User);
    var lastChats = myUser?.GetLastChats();
    int lastMessageId = 0;
    ApplicationUser? SecondUser = null;
    Chat? chat = null;
    if (ViewBag.Chat != null)
    {
        chat = (Chat)ViewBag.Chat;
        if (chat != null)
        {
            if (chat.User1 != null && chat.User1.Id == myUser.Id)
            {
                SecondUser = chat.User2;
            }
            else if (chat.User2 != null && chat.User2.Id == myUser.Id)
            {
                SecondUser = chat.User1;
            }
        }
    }
}

<main class="content">
    <div class="container p-0">
        <div class="card">
            <div class="card-header text-center">
                <h1 class="h3 mb-3">Messages</h1>
            </div>
            <div class="row g-0">
                <div class="col-12 col-lg-5 col-xl-3 border-right" style=" border: 1px solid #dee2e6; border-radius: 5px;">
                    <div class="px-4 d-none d-md-block">
                        <div class="d-flex align-items-center">
                            <div class="flex-grow-1">
                                <input type="text" class="form-control my-3" placeholder="Search...">
                            </div>
                        </div>
                    </div>

                    <div style="max-height: 500px; overflow-y: auto;">
                        @if (lastChats != null && lastChats.Count > 0)
                        {
                            @await Html.PartialAsync("ChatsPartial", lastChats)
                        }
                    </div>
                </div>

                <div class="col-12 col-lg-7 col-xl-9" style=" border: 1px solid #dee2e6; border-radius: 5px;">
                    @if (SecondUser != null)
                    {
                        <div class="py-2 px-4 border-bottom d-none d-lg-block">
                            <div class="d-flex align-items-center py-1">
                                <div class="position-relative">
                                    <img src="~/@SecondUser?.PersonalImageUrl" class="rounded-circle mr-1" alt="@SecondUser?.FullName" width="40" height="40"
                                         style="margin:5px;">
                                </div>
                                <div class="flex-grow-1 pl-3">
                                    <strong>@SecondUser?.FullName</strong>
                                    @*<div class="text-muted small"><em>Typing...</em></div>*@
                                </div>
                                <div>
                                    <button class="btn btn-primary btn-lg mr-1 px-3"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-phone feather-lg"><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path></svg></button>
                                    <button class="btn btn-info btn-lg mr-1 px-3 d-none d-md-inline-block"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-video feather-lg"><polygon points="23 7 16 12 23 17 23 7"></polygon><rect x="1" y="5" width="15" height="14" rx="2" ry="2"></rect></svg></button>
                                    <button class="btn btn-light border btn-lg px-3"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-more-horizontal feather-lg"><circle cx="12" cy="12" r="1"></circle><circle cx="19" cy="12" r="1"></circle><circle cx="5" cy="12" r="1"></circle></svg></button>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="position-relative">
                        <div id="activeChatDiv" class="chat-messages p-4" style="max-height: 500px; overflow-y: auto;">
                            @if (chat != null && chat.Messages != null && chat.Messages.Count > 0)
                            {
                                var msgs = chat.Messages.OrderBy(m => m.SentAt).ToList();
                                foreach (var msg in msgs)
                                {
                                    lastMessageId = msg.Id;
                                    @await Html.PartialAsync("LoadMessagePartial", msg)
                                }
                            }
                        </div>
                    </div>
                    @if (chat != null)
                    {
                        <div class="flex-grow-0 py-3 px-4 border-top">
                            <div class="input-group">
                                <input type="text" id="txtMessage" class="form-control" placeholder="Type your message">
                                <button class="btn btn-primary" onclick="sendMessage('@SecondUser.Id',@chat.Id)">Send</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</main>

@section Scripts{ 
    <script>
        function sendMessage(recieverId, chatId) {
            var text = $("#txtMessage").val();
            if (text != null && text != '') {
                $.post('/chats/SendMessage', { 'RecieverId': recieverId, 'ChatId': chatId, 'Text': text }, function (response) {
                    if (response != 0) {
                        $("#txtMessage").val(null);
                        /*$.get('/chats/LoadMessage/' + response, function (htmlResponse) {
                            $("#activeChatDiv").append(htmlResponse);                            
                            $('#activeChatDiv').scrollTop($('#activeChatDiv')[0].scrollHeight);
                        });*/
                    }
                })
            }
        }

        function startSignalR() {
            var IsAuthenticated = '@User?.Identity?.IsAuthenticated.ToString().ToLower()';
            if (@User?.Identity?.IsAuthenticated.ToString().ToLower() == true) {
                //var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
                
                connection.on("ReceivePrivateMessage", function (fromUser, messageId) {
                    console.log("ReceivePrivateMessage");
                    $.get('/chats/LoadMessage/' + messageId, function (htmlResponse) {
                        $("#activeChatDiv").append(htmlResponse);                        
                        $('#activeChatDiv').scrollTop($('#activeChatDiv')[0].scrollHeight);
                    });
                });

                /*$("#sendButton").click(function () {
                    var user = $("#username").val();
                    var message = $("#message").val();
                    connection.invoke("SendMessage", user, message);
                    $("#message").val("").focus();
                });*/

                connection.start().then(function () {
                    console.log("Connected!");
                }).catch(function (err) {
                    console.error(err.toString());
                });
            }
        }

        $(document).ready(function () {
            if (@lastMessageId!= 0) {
                $("#activeChatDiv").animate({
                    scrollTop: $('#activeChatDiv')[0].scrollHeight - $('#activeChatDiv')[0].clientHeight
                }, 1000);
            }
        });
    </script>
}